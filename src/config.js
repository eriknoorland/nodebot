const LOOP_TIME = 20; // ms
const MOTOR_ENCODER_CPR = 48; // two pin encoder rising and falling edge
const MOTOR_GEAR_RATIO = 46.85;
const NUM_TICKS_PER_REVOLUTION = MOTOR_GEAR_RATIO * MOTOR_ENCODER_CPR;
const WHEEL_BASE = 192; // 188.7; // mm
const BASE_CIRCUMFERENCE = Math.PI * WHEEL_BASE;
const LEFT_WHEEL_DIAMETER = 69.14; // mm
const LEFT_WHEEL_CIRCUMFERENCE = Math.PI * LEFT_WHEEL_DIAMETER; // mm
const LEFT_DISTANCE_PER_TICK = LEFT_WHEEL_CIRCUMFERENCE / NUM_TICKS_PER_REVOLUTION; // mm
const RIGHT_WHEEL_DIAMETER = 69.14; // mm
const RIGHT_WHEEL_CIRCUMFERENCE = Math.PI * RIGHT_WHEEL_DIAMETER; // mm
const RIGHT_DISTANCE_PER_TICK = RIGHT_WHEEL_CIRCUMFERENCE / NUM_TICKS_PER_REVOLUTION; // mm
const ACCELERATION = 5; // mm/looptime
const MIN_SPEED = 50; // mm/s
const MAX_SPEED = 200; // mm/s
const MAX_ROTATION_SPEED = MAX_SPEED / 2; // mm/s
const HEADING_KP = 100;
const GRIPPER_JAW_CLOSE_ANGLE = 35;
const GRIPPER_JAW_WIDE_OPEN_ANGLE = 85;
const GRIPPER_JAW_OPEN_ANGLE = 125;
const GRIPPER_LIFT_UP_ANGLE = 75;
const GRIPPER_LIFT_DOWN_ANGLE = 140;

const config = {
  LOOP_TIME,
  MOTOR_ENCODER_CPR,
  MOTOR_GEAR_RATIO,
  NUM_TICKS_PER_REVOLUTION,
  WHEEL_BASE,
  BASE_CIRCUMFERENCE,
  LEFT_WHEEL_DIAMETER,
  LEFT_WHEEL_CIRCUMFERENCE,
  LEFT_DISTANCE_PER_TICK,
  RIGHT_WHEEL_DIAMETER,
  RIGHT_WHEEL_CIRCUMFERENCE,
  RIGHT_DISTANCE_PER_TICK,
  ACCELERATION,
  MIN_SPEED,
  MAX_SPEED,
  MAX_ROTATION_SPEED,
  HEADING_KP,
  GRIPPER_JAW_CLOSE_ANGLE,
  GRIPPER_JAW_WIDE_OPEN_ANGLE,
  GRIPPER_JAW_OPEN_ANGLE,
  GRIPPER_LIFT_UP_ANGLE,
  GRIPPER_LIFT_DOWN_ANGLE,
};

module.exports = config;